import React from 'react';

import { StyleSheet, Text, View, ScrollView, TouchableOpacity } from 'react-native';

import NavigationTop from '../../components/NavigationTop';
import BottomMenu from '../../components/BottomMenu';

import { COLORS, FONTS } from '../../styles/theme';

const Notifications = () => {
    const notificationsGroups = [
        {
            title: '–ù–æ–≤—ñ',
            notifications: [
                { text: '–£—Ö—É! –ê–Ω—Ç–æ–Ω –∑–∞–ª–∏—à–∏–≤ —Ç–æ–±—ñ –Ω–æ–≤—É —Ä–µ–∞—Ü—ñ—é - üëç. –¢–∞–∫ —Ç—Ä–∏–º–∞—Ç–∏!', dateText: '2 –≥–æ–¥–∏–Ω–∏ –Ω–∞–∑–∞–¥' },
                { text: '–ó–∞–≤—Ç—Ä–∞ –î–µ–Ω—å –≤—á–∏—Ç–µ–ª—è, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–∏–≤—ñ—Ç–∞—Ç–∏ —Å–≤–æ—ó—Ö –≤–∏–∫–ª–∞–¥–∞—á—ñ–≤ üéâ', dateText: '6 –≥–æ–¥–∏–Ω –Ω–∞–∑–∞–¥' }
            ]
        },
        {
            title: '–¶—å–æ–≥–æ —Ç–∏–∂–Ω—è',
            notifications: [
                { text: '–í—á–∏—Ç–µ–ª—å –æ—Ü—ñ–Ω–∏–≤ —Ç–≤–æ—é —Ä–æ–±–æ—Ç—É –∑ —Ç–µ–º–∏ "–ü–æ—á–∞—Ç–æ–∫ —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ–≥–æ –Ω–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ–≥–æ –≤—ñ–¥—Ä–æ–¥–∂–µ–Ω–Ω—è" üßë‚Äçüè´', dateText: '–í—á–æ—Ä–∞' }
            ]
        },
        { title: '–¶—å–æ–≥–æ –º—ñ—Å—è—Ü—è', notifications: [] },
        {
            title: '–†–∞–Ω—ñ—à–µ',
            notifications: [
                { text: '–î–æ—Å—Ç—É–ø–Ω–π –Ω–æ–≤–∏–π —É—Ä–æ–∫ –Ω–∞ —Ç–µ–º—É "–ö—É–ª—å—Ç—É—Ä–Ω–µ –∂–∏—Ç—Ç—è –ø–æ–ª—è–∫—ñ–≤ –Ω–∞ —Ç–µ—Ä–∏—Ç–æ—Ä—ñ—ó –£–∫—Ä–∞—ó–Ω–∏ –≤ 19 —Å—Ç–æ–ª—ñ—Ç—Ç—ñ" ü§ì', dateText: '3 –¥–Ω—ñ —Ç–æ–º—É' },
                { text: '–£—Ö—É! –•—Ä–∏—Å—Ç–∏–Ω–∞ –∑–∞–ª–∏—à–∏–ª–∞ —Ç–æ–±—ñ –Ω–æ–≤—É —Ä–µ–∞—Ü—ñ—é - üòä. –¢–∞–∫ —Ç—Ä–∏–º–∞—Ç–∏!', dateText: '5 –¥–Ω—ñ–≤ —Ç–æ–º—É' }
            ]
        }
    ];

    return (
        <View style={styles.container}>
            <ScrollView>
                <View style={styles.content}>
                    <View style={styles.navigationWrap}>
                        <NavigationTop label='Notification' noBack />
                    </View>
                    <View>
                        {notificationsGroups.map((notificationsGroup, i) => {
                            if (!notificationsGroup.notifications.length) {
                                return null;
                            }

                            return <View key={i} style={styles.notificationGroup}>
                                <View style={styles.notificationGroupHeader}>
                                    <View style={styles.line} />
                                    <Text style={styles.notificationGroupHeaderTitle}>{notificationsGroup.title}</Text>
                                    <View style={styles.line} />
                                </View>
                                <View style={styles.notifications}>
                                    {notificationsGroup.notifications.map((notification, i) => {
                                        return <View style={styles.notification} key={i}>
                                            <View style={styles.notificationInfo}>
                                                <Text style={styles.notificationText}>
                                                    {notification.text}
                                                    <TouchableOpacity>
                                                        <Text style={styles.notificationMoreDetails}>–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏</Text>
                                                    </TouchableOpacity>
                                                </Text>
                                                <Text style={styles.notificationDate}>{notification.dateText}</Text>
                                            </View>
                                        </View>;
                                    })}
                                </View>
                            </View>;
                        })}
                    </View>
                </View>
            </ScrollView>
            <BottomMenu />
        </View>
    );
};

const styles = StyleSheet.create({
    root: {
        flex: 1
    },
    container: {
        flex: 1,
        backgroundColor: COLORS.WHITE
    },
    content: {
        paddingLeft: 20,
        paddingRight: 20,
        paddingBottom: 20
    },
    navigationWrap: {
        paddingLeft: 20,
        paddingRight: 20
    },
    notificationGroup: {
        marginTop: 27
    },
    notificationGroupHeader: {
        flexDirection: 'row',
        alignItems: 'center'
    },
    line: {
        flex: 1,
        backgroundColor: '#F1F1F1',
        height: 1
    },
    notificationGroupHeaderTitle: {
        textTransform: 'uppercase',
        color: COLORS.GREY,
        fontFamily: FONTS.GILROY_SEMI_BOLD,
        fontSize: 12,
        paddingLeft: 6,
        paddingRight: 6
    },
    notifications: {
        flex: 1

    },
    notification: {
        marginTop: 14,
        flexDirection: 'row'
    },
    notificationAvatar: {
        width: 35,
        height: 35,
        borderRadius: 10000
    },
    notificationInfo: {
        marginLeft: 16,
        paddingRight: 30
    },
    notificationText: {
        color: COLORS.BLACK,
        fontFamily: FONTS.GILROY_MEDIUM,
        fontSize: 14
    },
    notificationMoreDetails: {
        color: COLORS.BLUE,
        fontFamily: FONTS.GILROY_MEDIUM,
        fontSize: 14,
        marginLeft: 4,
        textDecorationLine: 'underline',
        position: 'relative',
        top: 1
    },
    notificationDate: {
        color: COLORS.GREY,
        fontFamily: FONTS.GILROY_MEDIUM,
        fontSize: 12,
        marginTop: 8
    }
});

export default Notifications;
